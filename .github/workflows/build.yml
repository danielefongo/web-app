name: Build and Release

on:
  push:
    branches:
      - main

permissions:
   contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm ci

    - name: Get package version
      id: package-version
      run: |
        echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

    - name: Check if tag exists
      id: check-tag
      run: |
        git fetch --tags origin
        if git rev-parse "v${{ steps.package-version.outputs.version }}" >/dev/null 2>&1; then
          echo "already-exists=true" >> $GITHUB_OUTPUT
        else
          echo "already-exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Create tag if not exists
      if: steps.check-tag.outputs.already-exists == 'false'
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag -a "v${{ steps.package-version.outputs.version }}" -m "Release ${{ steps.package-version.outputs.version }}"
        git push origin "v${{ steps.package-version.outputs.version }}"

    - name: Build Electron app
      if: steps.check-tag.outputs.already-exists == 'false'
      run: npm run build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Release
      if: steps.check-tag.outputs.already-exists == 'false'
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.package-version.outputs.version }}
        name: Release ${{ steps.package-version.outputs.version }}
        draft: false
        prerelease: false
        files: |
          out/**/*.AppImage
